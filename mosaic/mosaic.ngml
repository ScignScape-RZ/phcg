
MOSAIC Science, Humanities, and Enginering Portal

MOSAIC is a cloud portal for hosting scientific, academic, and 
technical publications.  MOSAIC bridges the gap between 
traditional acadmic publishing and the new 
world of software- and data-driven research platforms, 
which feature interactive reading experiences 
and open-access data sharing.

Today there are many online academic/scientific/technical 
portals, catering 
to an academic and technical audience, which aggregate 
links to research articles, books, and journals.  
Portals with this emphasis can be called 
AST (academic/scientific/technical) Portals.  
AST Portals typically link to web pages devoted to individual 
publications, with each page displaying citations, 
abstracts, keywords/topical classification, and 
(when appropriate) links to download entire 
publications in e-reader (typically PDF) formats.  
AST Portals are provided both by 
individual publishers and by scientific 
projects (like Sciverse, Mendeley Data, and Dryad) 
aggregating content from many publishers.

Because they were designed for traditional publications, 
current AST Portals have limited 
support for technologically sophisticatd 
features of modern publications: annotating 
document text with linked data, and joining 
publications with open-access data and interactive 
presentations.  Publishers have therefore 
sponsored several projects and standards, including 
the FAIR (Findable, Accessible, Interoperable, 
Reusable) initiative, 
FORCE11 (Future of Research Communication and e-Scholarship), 
and the Research Object 
Protocol.  These initiatives are designed to 
improve research portals' support for cutting-edge 
publication technology.  In the 
words of the FORCE11 \q{Manifesto}:

\begin{quote}
While not disputing the expressive power of the written 
word to communicate complex ideas, our foundational assumption 
is that scholarly communication by means of semantically-enhanced 
media-rich digital publishing is likely to have a greater impact 
than communication in traditional print media or electronic 
facsimiles of printed works.  However, to date, online [publications] 
have tended to replicate print forms, rather than exploit the 
additional functionalities afforded by the digital terrain.  
We believe that digital publishing of enhanced papers will enable 
more effective scholarly communication, which will also broaden 
to include, for example, better links to data, the publication of 
software tools, mathematical models, protocols and workflows, and 
research communication by means of social media channels.
\end{quote}

Unfortunately, publishers have not significantly adopted 
or embraced the Research Object Protocol and similar 
proposals.  As a result, authors and researchers have 
had fewer incentives to embrace these paradigms, 
despite the efforts of groups like FORCE11 to promote them.  
While scintists increasingly publish raw data --- part of 
an emerging paradigm prioritizing replication 
and transparency --- very few data sets are published 
as Research Objects conforming to contemporary standards.  
Even when data sets do have this 
extra structure, the research portals which 
link to their associated publications have 
no tehnological means to document 
or provide access to the enhanced features 
afforded by the Research Object Protocol.

This explains why a new scientific, academic, technical 
publishing platform is needed.  MOSAIC 
steps into this void first by instantiating a new 
AST Portal and second by providing the cloud-native 
technology to replicate this portal in 
other conextss, so that publishers and 
other institutions can create their own versions of 
MOSAIC or reuse its components in other projects.

In addition to MOSAIC itself, 
the technology driving the platform can be 
deployed as a suite of three products that can 
be licenced individually or collectively --- the
MOSAIC SDK, NDP Cloud (Native-Driven Platform 
for the Cloud), and VersatileUX (a front-end 
development toolkit).  

This summary and accompanying slides will describe the 
current technological limitations that MOSAIC 
addresses, outline MOSAIC as a whole, 
and then review the MOSAIC SDK, NDP Cloud, 
and VersatileUX products.

How the Research Object Protocol is Supposed to Work

Unlike a data set which just exposes raw data, a 
Research Object combines data and code into a bundle 
that promotes interactive exploration and reuse, 
adding value to associated publications.  
To fully levrage this added value, the Research Object 
Protocol was designed to ensure that Research Object 
publications can seamlessly interoperate 
with research portals and publishers' web sites.

According to the standard, when an author publishers a 
Research Object --- either on a specialized academic 
site like Mendeley Data or a generic service like 
Github --- authors would notify the maintainers of 
AST Portals (those which index the corresponding publication) 
that a new data set, associated with the corresponding 
publication, is now publicly available.  Because 
Research Objects have a fixed structure, portals' 
software can then, in principle, automatically 
extract metadata from the Research Object and 
use this metadata to update the relevant web pages.  
These web pages can 
then, first, include a link for readers to 
download the data set itself as a zipped folder, 
and, second, present basic information about 
the data set: its software requirements, 
file formats, download/unzipped size, programming 
language(s) used, update and version info, and 
instructions on compiling/using the 
Research Object code.  Second, 
web applications (and other kinds of software) can use 
the Research Object metadata to display an overview of 
the Research Object code --- for instance, a summary of 
important data types and procedures implemented on them.  
Technical overviews of Research Object code 
serves as pedagogical overviews of research 
methods: the data structures and algorithms used to compute 
research findings encapsulate the data collection 
instruments (which can be lab equiment but also surveys, 
corpora, and other social-science data sources) 
and the experimental protocols which have informed 
the published work.
 
In short, Research Objects are a logical extension of a 
published book or article.  By sharing code alongside raw 
data, each Research Object includes a code base whose 
design captures the essential structural and methodological 
features of the research.  For example, by 
modeling the information entered into the system by 
data collection instruments, the Research Object 
code base clarifies the system's scientific theory and 
epistemological paradigms.  It distinguishes 
input data points from calculated data values, and 
demonstrates the requirements and presuppotions 
concerning input data and how derived values 
are computed.  The 
Research Object code thereby bcomes a concrete 
prototype of the experimentl and analytical 
methodology described theoretically in the publication.

In principle, then, AST  
Portals can use Research Objects to build summary 
presentations of published research.  Like an 
abstract, these summaries can show readers a 
concise overview of a publication to help them 
decide whether they will benefit from rading and/or 
downloading the publication and/or data set as a whole.

But the Research Object Protocol has not Been Implemented!

Unfortunately, the Research Object features just described 
have not yet found their way into existing AST  
Portals.  Current technology does not 
interoprate with Research Object on either 
the simpler metadata level or the more sophisticated 
architectural level.  This gap is a combination 
of three distinct problems:

\begin{enumerate}
\item First, there is no standardized way for authors 
to notify publishers about new Research Objects.  
Some data set portals, like Mendeley, have 
web forms where resarchers can enter information 
about their Research Objects.  According to Elsevier, 
the metadata in Mendeley is then internally shard 
with other Elsevier portals, like SciVerse.  
However, it is not clear when new technology 
which is supposed to integrate Mndeley Dataand 
SciVerse will actually come online.  
Other publishers, meanwhile, do not appear to have 
any mchnism for interoperating between 
AST Portals (which aggregate publications) and 
data set portals (which can aggregate Research Objects).

\item Even if authors \textit{can} refer AST Portals 
to published Research Objects, the AST Portals 
need sufficient capabilities to access and 
interpret Research Object metadata.  This 
requires portal software that can read such metadata, 
and also that web templates include sections for 
displaying Research Objects' technical information 
(like programming language and file format), 
the kind of basic information which can be automatically 
extracted according to the Research Object Protocol.

\item Moreover, to fully leverage the value 
of Research Objects, AST Portals need to interpret 
Research Object metadata at a higher scientific level.  
This bcomes possible when Research Object metadata 
presents summarial information about the 
experimental protocols and computational 
methods employed via Research Object code.  
However, although the Research Object Protocol 
recommends that data bundles include 
this sort of higher-level metadata, 
the protocol does not spcify how 
such scientific infornation should 
be represented and how it should be used 
by protocol-compliant software.  
\end{enumerate} 
 
According to the Research Object bundle specification: 

\begin{quote}
The specification for the RO model does not mandate any 
particular form for the representation of Research Objects. 
... Annotations about this research object and its resources ... 
may be present, [and] provides additional metadata or descriptions 
which are somewhat about or related to the research object or some 
of its aggregated resources.
\end{quote}

Extending the underlying RO model, developers have 
specified more detailed models such as \q{Wf4Ever}:

\begin{quote}
The focus of Wf4Ever is on workflow preservation 
(and more specifically workflows supporting scientific investigation). 
Thus the objects that will be described using the model are inherently 
workflow-centric.  Although the basic infrastructure 
(aggregation + annotation + domain vocabularies) that the RO model supports 
is applicable to many situations 
(for example the executable or enhanced publication of FORCE11), 
the specific vocabularies defined within the Wf4Ever RO model are 
intended to support those Research Objects that 
have workflows (methods) as their primary content.
\end{quote}

In short, a well-established model is provided for workflow-centric 
Research Objects, but comparable specifications have not 
emerged for other kinds of technical projects.  In the general 
case, publishers have to define their own Research Object 
modls.  That is, they have to specify what sort of 
metadata Research Objects should expose so that 
information about Research Objects can be integrated 
into publishers' overall online resources.  

Because publishers have been unwilling to develop their own 
Research Object technology, authors do not have clear 
guidelines about how to document and annotate Research Objects 
even if they embrace the Research Object paradigm.  
This has appently caused an impasse wherein 
neither authors nor publishers model sufficiently detailed 
requirements of one another to complete the Research Object 
circuit.  In particular, scientists do not have 
Research Object data models for most academic disciplines 
which are fine-grained like the Wf4Ever Ontology.  
While this situation surely reflects technologically 
inertia, it also testifies to the conceptual gap between 
Semantic Web Ontologies and scientific data models 
themselves, a gap which has been noted 
by many scientists themselves.  

Scientists have criticized contemporary standards for data sharing 
--- e.g., the Semantic Web --- for lacking conceptual precision 
and failing to capture the essence of scientific 
procedures.  In the words of 
Martin Raubal and Benjamin Adams,

\begin{quote}
 the Semantic Web is still not semantic in the 
 human sense because it does not sufficiently 
account for people's cognition, i.e., human conceptual 
representations and reasoning...  [K]nowledge representations 
underpinning the Semantic Web should
afford two important human cognitive tasks: 
the efficient calculation of semantic similarity ... 
and combinations of concepts.... However, 
the existing logical foundations of the Semantic
Web --- description logics and rules --- presume a set-based 
classification scheme that does a poor job of
facilitating these operations. 
\end{quote}

Raubal and Adams have developed their own system 
for representing scientific data, called Conceptual 
Space Markup Language (CSML), which can 
be an equal or superior format for describing 
scientific metadata than RDF Ontologies.  However, 
although the Research Object Protocol 
does not specifically require RDF (Resource Description 
Format), its tooling and specification clearly 
show the influence of Semantic Web technology.  
This has prevented alternatve models like 
Conceptual Spaces --- originally proposd 
by the Cognitive Scientist Peter G\"ardenfors 
--- which are intended to be more 
accurate models of scientific data, based on investigation 
of both human conceptualization and scientific practice. 
 
In contrast to the existing Research Object model, 
MOSAIC provides a detailed structure for 
describing scientific data.  MOSAIC itself 
is an acronym for \textit{Multiparadigm 
Ontologies for Scientific, Academic, and Technical Publications}.  
MOSAIC unifies diverse models and theories of 
scientific metadata, such as Conceptual 
Space Markup Language, into a canonical but flexible format 
that ensures interoperability between Research Object code 
and AST Portals' software.  MOSAIC, furthermore, 
models scientific metadata with rigorous attention 
to scientific practic (and rsearch methodology 
in gneral, across academic disciplines).  In 
short, for MOSAIC, metadata is not just a technological 
artifact but a conceptual summary of scientific theories, 
practices, and conceptualizations.  

The MOSAIC Architecture and Data Models

A MOSAIC portal combines a central web service with a 
collection of independent Research Objects.  Not every 
document indexed by MOSAIC must have an associated 
Research Object, but the technological design of 
MOSAIC prioritizes integrating research portals 
with downloadable Research Objects.

In particular, MOSAIC encouragesa the 
creation of \tectit{self-contained} Research Objects.  
In particular, MOSAIC assumes that the 
typical Research Object indexed on a MOSAIC portal 
will be a downloadable code-and-data bundle 
with \textit{minimal external dependencies}.  
It should be easy for readers to get 
started exploring and interacting with Research Objects 
without complicated downloads or installation of 
additional software.  Authors are certainly free 
to \textit{enhance} Research Objects with 
content tailord to specialized software --- for 
example, sophisticated data visualization features, 
or integration with software commonly used in the 
relevant research fields.  However, these extra capabilities 
augment the core of the Research Object, which should 
provide a mechnism for researchers to understand, 
visualize, and reuse the bundled code and data without 
requiring external software or code libraries.

In order to help authors create self-contained 
Research Objects, MOSAIC defines a 
\textit{Reference Application Kernel} (RAK) 
which presents a canonical format for bundling 
research data and code into a self-contained 
package.  A Research Object bundle using 
the RAK format can be called an RAK bundle.  
Each RAK bundle provides a standalone, desktop-style 
Dataset Application that offers an entry point to 
the raw data.  By design, it should be easy 
to download the RAK bundle from MOSAIC and 
then compile and launch the Dataset Application, so 
readrs can begin exploring the data set with 
minimal hassle.  The RAK format includes othr 
features as well, such as code export and testing 
features which provide a more detailed access to 
the published data.  However, the Dataset Application 
presents a useful introduction to the underlying 
data set, which helps users get oriented to the dataset 
in its broad overview before they start to examine it in 
finer detail.

Technically, MOSAIC RAK bundles are code repositories 
based on the Qt platform for C++ Applications.  
In RAK, each data set features C++ code which has no 
dependencies apart from Qt itself.  The Dataset 
Application should compile and run automatically from 
inside Qt Creator.  Because Qt is an advanced 
desktop GUI development platform, it allows 
Research Objects to present compelling, 
interactive graphics and GUI componenst 
--- including 2D and 3D visualizations, tables and charts, 
context menus, dialog boxes, explanations of 
technical terms, embedded PDF viewers, and other 
features which make Dataset Applications an 
interactive and pedagogically useful tool for 
exploring raw data, customized for each data set.
  
Research Objects indexed by MOSAIC do not have to 
use the RAK model.  However, RAK provides a 
Reference Implementation of how Research Object 
metadata can be described so it is automatically 
processed by a MOSAIC portal.  Developers 
using different Research Object models can 
examine how RAK bundles expose data to MOSAIC 
so as to create analogous metadata for their own 
bundles.

The MOSAIC SDK and Data Modeling Features

To facilitate implementation of RAK bundles, 
MOSAIC provides several development tools and 
code libraries which can help set up a development 
environment tailored to the MOSAIC ecosystem.  
