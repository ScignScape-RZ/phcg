
`section.Cognitive and Computational Practice`
`p.
Any attempt to bridge Computational Linguistics and 
Cognitive Grammar or Phenomenology must solicit one or several 
`q.founding analogies`/, linking phenomena on the 
formal/computational side with those on the 
cognitive/computational side.  Here, I will start from 
the analogy of `i.cognitive` and `i.computational` `i.process`/, 
or generically `q.process` (of either variety).  
Processes, per se, I will 
leave undefined, although a `q.computational` process 
can be considered roughly analogous to a single 
function implemented in a computer programming language.
Th story I want to tell goes something like this: understanding 
language involves many cognitive processes, many of 
which are subtly determined by each exact language artifact 
and the context where it is created.  Properly understanding a 
piece of language depends on correctly weaving together 
the various processes involved in understanding its 
component parts, and the structure of the 
multi-process intergration is suggested by the grammar of 
the artifact.  Grammar, in a nutshell, uses relationships 
between words to evoke relationships between 
cognitive processes.  
`p`

`p.
My formal elaboration of this model will be inspired at an 
elementary level by process `i.algebra` in the computational 
setting, but more technically by applied `i.type theory`/.  
Inter-process relations are the core topic of Process 
Algebra, including sequentiality (one process followed by 
another) and concurrency (one process executing alongside 
another).  In practice, detailed research around Process Algebra 
seems to focus especially on concurrency, perhaps because 
this is the more complex area of application 
(designing computer systems which can run multiple threads in 
parallel).  It is likewise tempting to 
imagine that cognitive-linguistic processes exhibit some 
degree of parallelism, so that the various pieces of 
understanding `q.fall into place` together as we grasp 
the meaning of a sentence (henceforth using `i.sentence` as a 
representative example of a mid-size lanuag artifact in general).  
Nevertheless, I will focus more on `i.sequential` relations between 
processes, suggesting a language model (even if rather idealized) 
where cognitive processes unfold in a temporal order.   
`p`

`p.
On both the cognitive and computational side, temporality is relative 
rather than quantified: the significant detail is not 
`q.before` and `q.after` in the sense of measuring time but rather how 
one process logically precedes another in effects and prerequisites.  
No theoretical importance is attached to `i.how long` it takes 
before processes finish, or how much time elapses between 
antecedent and subsequent processes (in contrast to subjects like 
optimization theory, where such details are often significant).   
We can set aside notions of a temporal continuum 
where subsequent processes occupy disjoint, extended time-regions; 
instead, one process follows another if anything affected by the first 
process reflects this effect at the onset of the second process.  
Time, in this sense, only exists as manifest in the variations 
of any state revelant to processes %-- in the computational 
context, in the overall state of the computer (and potentially 
other computers on a network) where a computation is 
carried out.  Two times are different only insofar as the 
overall state at one time differs from the state at the second time.  
Time is `i.discrete` because the relevant states are discrete, and 
because beneath a certain sclae of time delta there is no 
possibility of state change. 
`p`

`p.
Analogously, in language, I suggest that we set aside notions of 
an unfolding process reflecting the temporality of expression.  
Of course, the fact that parts of a sentence are heard first 
biases understanding somewhat; and speakers often exploit 
temporality for rhetorical effect, elonging the pronunciation 
of words for emphasis, or pausing before words to 
signal an especially calculated word choice, for example.  
These data are not irrelvant, but, for core semantic and 
syntactic analysis, I will nonetheless treat a sentence as 
an integrated temporal unit, with no value atributed to 
temporal ordering amongst words except insofar as temporal 
order establishes word order and word order has grammatical 
significance in the relevant natural language/dialect.   
`p`

`p.
While antecedent/subsequent inter-process relations are among those 
formally recognized in Process Algebra, this specific genre 
of relation is implicit to other models important 
to computer science, such as Type Theory and Lambda Calculus.  
If `typeT; is a type, then any computational process 
which proceduces a value of type `typeT; has a corresponding 
(`q.functional`/) type (for sake of discussion, assume a `q.value` 
is anything that can be encoded in a finite sequence of numbers 
and that `q.types` are classifications for values that introduce 
distinctions between functions %-- e.g., the function to add two 
integers is different than the function to add two decimals; more 
rigorous definitions of primordial notions like `q.type` and 
`q.value` are possible but not needed for this paper).  
Similarly a process which takes as `i.input` a value of 
`typeT; is its own type.  If two processes have these two 
types respectively %-- one outputs `typeT; and the other 
inputs `typeT; %-- then the two can be put in sequence, where 
the output from the antecedent becomes the inut to the subsequent.  
In this manner inter-process sequential relations become 
subsumed into `q.type systems` can can be studied using 
type-theoretic machinery rather than Process Algebras or 
Process Calculii as such.  
`p`

`p.
There also exists a robust type-theoretic tradition 
in (Natural Language) semantics, which is disjoint from 
but not entirely irrelevant to the type systems of 
formal and programming languages.  Semantic types are 
recognized at several different levels of classification, 
but some of the most interesting type-theoretic effects 
involve medium-grained semantic criteria that are 
more general than lexical entries but more specific than 
Parts of Speech.  For example, the template `i.I believed 
X` generally requires that `i.X` be a noun 
(?`i.I believed run`/), but more narrowly a 
certain `i.type` of noun, something that can be interpreted 
as an idea or proposition of some kind (?`i.I believed flower`/).  
Asher and Pustejovsky point out the anomaly in a sentenc 
like `q.Bob's idea weighs five pounds` (ex. 2 p. 5), which 
possesses a flavor of unacceptability that feels akin to 
Part of Speech errors but are not in fact syntactic 
errors.  The object of `i.weigh` is `q.five pounds` and 
its subject is `q.Bob's idea`/, which is admissible 
`i.syntactically` but fails to honor our semantic convention 
that the verb `q.to weigh` should be applied to things 
with physical mass (at least if the direct object denotes a quantity; 
contrast with `i.Let's all weigh Bob's idea`/, where the 
`i.idea` is object rather than subject).  These conventions are 
analogous to Part of Speech rules but more fine-grained: 
there is a meaning of `i.weigh` which (like any transitive 
verb) has to be paired with a subject and object noun, but beyond 
just being nouns the subject must be a physical body 
(in effect a sub-type of nouns) and the object a quantitative 
expression (another sub-type of nouns).  Potentially, type 
restrictions on a coarse scale (e.g. that the subject of a verb 
must be a noun) and those on a finer scale (as in this 
sense of `i.to weigh`/) can be unified into an overarching theory, 
which spans both grammar and semantics.  This is one way of 
reading the type-theoretic semantic project.
`p`

`p.
Along with Process Algebra, my take on linguistic 
understanding is informed by type theory 
(in both computational and linguistic contexts), 
but particularly by the merged notion of `i.typed` 
processes.  So if we say that something has the `i.type` 
of a physical-body noun %-- the `q.Physical Body` is 
a type in the overall semantics of language %-- then 
I propose a corresponding type of cognitive 
(perceptual and conceptual) processes characteristic 
of perceiving and reasoning about physical things.  A particular 
designatum %-- a bag of rice, say %-- is subsumed under 
the semantic type insofar as our perceptual encounters with that 
thing %-- and/or our concepual exercises pertaining to 
its properties and proclivilities (like being difficult to carry) 
%-- are roughly prototyped by a certain generic kind of 
cognitive process.  This assumes that there is a similitude among 
processes of perceiving and thinking about physical bodies 
(at least the mid-sized, quotidian physical things that tend 
to enter nonspecialist language) sufficient to subsume them under 
a common prototype, which I then argue forms the cognitive 
substratum for the semantic type `q.Physical Object`/.  
Moreover, I contend a similar cognitive substratum
can be found for other mid-scale semantic types that underlie analyses 
of semantic acceptability and metaphoricality, like 
`q.Living Thing`/, `q.Sentient Living Thing` (`q.flowers want 
sunshine` is metaphorical because it ascribes propositional 
attitudes to something whose type does not lkterally support them), 
and `q.Social Institutions` (`q.The newspaper you're reading 
fired its editor` exhibits a `q.type coercion` where `i.newspaper` is read 
first as an object and then as a company).  One feature of semantic 
types is the lexical superposition of different types to produce what 
(in a slightly different context) Gilles Fauconnier calls a `q.blend`/: 
in `q.Liverpool, which is near the ocean, built new docks`/, the 
city is treated as both a geographic region and a body politic.   
`p`

`p.
`q.Weighs`/, too, as a verb, can be given a typed-process 
interpretation.  In its least metaphoric sense, `q.to weigh` 
connotes a practical action of measuring some object's weight by 
using something like a scale; as `i.cognitive` process the 
verb embodies are ability to plan, reflect upon, or contemplate 
this practice.  So an `q.idea weighing 5 pounds` is anomalous because 
it is hard to play out in our minds a form of this practical act 
where the thing being weighed is mental.  Howevere, there are plenty 
of more figurative uses related to `q.weighing ideas`/, `q.heavy ideas`/, 
and so forth, so we are able to isolate the dimension of 
`q.judging` and `q.measuring` which is explicit in literal 
`q.weighing`/, and abstracting from the physical details use 
`q.weigh` to mean `q.measure` or `q.assess` in general.  
The phrase `q.weigh an idea` therefore connotes its own cognitive 
process %-- imagining someone thinking about the idea in an 
evaluative way %-- but this figurative `q.script` is closed off by 
`q.5 pounds` which forces us to conceive the weighing literally 
with a scale, not figuratively as a kind of mental assessment. 
Once again, the type anomaly can be seen as a failure to 
map the linguistic senses evident in a sentence to an internally 
consistent set of cognitive procedures for dilating the semantic 
content seeded within each word. 
`p`

`p.
Notice that I am treating cognitive processes, in themselves, 
as semantic more than grammatical phenomena.  Literally, 
weighing something is a multi-stp act 
(lifting it on the sale, reading the measurement), and even in 
our mental replay of hypothetical weighing-acts it seems impossible 
not to imagine distinct phases (just as it is impossible not 
to picture left and right sides of an imaginary cow).  
Howevere, I assume that the cognitive script is figured by the 
lexeme `q.weighs` as a connotative unit: whatever internal structure 
our mental script of `q.weighing something` has, 
this structure is not a `i.linguistic` structur that must be 
encoded grammatically.  Similar, the concept 
`i.buttered toast` suggests a confluence of 
perceptual, physical-operational, and concptual aspects 
%-- we are inclijed to regard toast as `i.buttered` if it 
looks a certain way and also if we have seen someone apply 
butter to it (or have done so ourselves) and also if 
we are in a context where we expect to find toast that may be 
buttered (we are not disposed to call a piece of bread in a 
grocery store `q.buttered toast` even if it has that appearence).  
So the adjective `q.buttered` introduces multiple cross-modal 
parameters in addition to the underlying concept `q.toast`/; but I feel 
that the lexeme aggregates these parameters into a 
single `i.linguistic` unit.  In Langacker's terms, the various 
elements of `q.buttered` do not suggest `i.constructive effort`/, 
as if deliberate `i.linguistic` processing were needed to unpack the 
linguistic entity to its constituent parts.  Instead, `q.buttered` 
functions `i.semantically` as a unit (and likewise syntactically 
as the unit entering relations with other words %-- e.g. buttered-toast 
is an adjective/noun pair, not the noun `q.butter` at the root of the 
adjective) %-- even if its cognitive process 
is multi-faceted.  Indeed, this is precisely the signifying economy 
of language: it captures complex cognitive procedures by 
iconic, repeatable lexical units.  
`p`

`p.
On that theory, tieing specific word-senses to stereotyped 
cognitiv processes is a matter of semantics, not grammar per se.  
Grammar, I contend, come into play when multiple processes need to 
be integrated.  The concept `q.buttered toast`/, for example, seems 
to start from a more generic concept (toast) and then add 
extra detail (the buttering, with all that implies conceptually, 
pragmatically, and sensorially).  This is suggested by the 
substitutability of just `q.toast` for `q.buttered toast`/:

`examples,
`sample.I snacked on toast and coffee.`
`sample.I snacked on buttered toast and iced coffee/.`  
`examples`

Because the first sentence is perfectly clear, it seems 
that the ideas expressed (at least in this context) by 
`i.toast` and `i.coffee` are reasonably complete 
in themselves, so the adjectives have the effect of starting 
with a complete idea and adding on etra detail.  Procedurally, 
then, it seems like we have some process which takes us to 
`q.toast` and `q.coffee` and then, subsequent to that 
(logically if not temporally) we add the wrinkle of 
re-conceivingbthe toast as buttered and the coffee as iced.  
In short, the adjective-noun pairing is compelling us to 
run a pair of cognitive proceesses in sequence, one 
establishing the noun-concept as a baseline and one adding 
descriptive detail by an `q.adjectival`/, a specificational 
process. 
`p`

`p.
Counter to that analysis, someone might judge that 
phrases like `q.buttered toast` and `q.iced coffee` are 
conventional enough that we don't interpret them through 
two meaningfully disjoint processes.  This is entirely possible, 
given how erstwhile aggregate expressions bcome established units 
%-- what Langacker calls `i.entrenchment`/.  Different 
phrases ehibit different levels of entrenchment: 

`examples,
`sample.I snacked on toast and instant coffee.`
`sample.I snacked on toast and Eritrean coffee.`  
`examples`

Arguably `q.instant coffee` is a de facto lexical unit, partly 
because reading it in terms of constituent parts is rather 
nonsensical (there's no non-oblique way to understand 
`q.coffee` being qualified as `q.instant`/).  Surely, however, 
`q.Eritrean coffee` is heard as a compound phrase 
(at least in 2019 %-- it is unlikely, but not 
impossible, that future Eritrean coffee growers will be so 
successful that we hear the phrase as a brand name 
or culinary term of art, like `q.Hershey's kisses` 
or `q.French toast`/).  The status of `q.iced coffee` is probably 
somewhere between those to.  But to the degree that 
a language element (whether word oe phrase) is entrenched and 
generally processed linguistically as a unit, I maintain, 
it tends to be governed by an integrally complete cognitivee 
process %-- not necessarily one without inner structure, but where the 
elements of this structure piece togther perceptually and 
situationally, rather than seeming to be 
`i.linguistically` disjoint conceptualizations that are brought together 
by the shape of linguistic phrases.  Conversely, where a cognitive 
process has this integral character, discursive pressures nudge 
the language toward entrenching some descriptive phrase as a 
quasi-lexeme; what starts being heard as a compound designation 
evolves to the point where language users don't attend to 
constituent parts. 
`p`


`p.
`p`



