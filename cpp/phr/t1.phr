init_program_stack ;.
enter_lexical_scope ;.
reset_program_stack ;.


 .; generate_from_fn_node ;.
push_carrier_stack $ fuxe ;.
hold_type_by_name $ fbase ;.
push_carrier_symbol $ if-t-e ;.
 .; args ;.
push_carrier_stack $ lambda ;.

push_unwind_scope $ 1 result ;.

 .; unwind_scope: 1 ;.

 .; generate_from_fn_node ;.
push_carrier_stack $ fuxe ;.
hold_type_by_name $ fbase ;.
push_carrier_raw_value $ #< ;.
 .; args ;.
push_carrier_stack $ lambda ;.
hold_type_by_name $ u4 ;.
push_carrier_raw_value $ 21 ;.
push_carrier_raw_value $ 24 ;.
push_carrier_stack $ result ;.
index_channel_group ;.
coalesce_channel_group ;.
 .; pop ;.
pop_unwind_scope ;.
temp_anchor_channel_group ;.
 .; end fuxe entry ;.
hold_type_by_name $ u4 ;.
push_carrier_expression ;.
hold_type_by_name $ fnc ;.

@fnp ;.
 .; generate_from_fn_node ;.
push_carrier_stack $ fuxe ;.
hold_type_by_name $ fbase ;.
push_carrier_symbol $ &prn ;.
 .; args ;.
push_carrier_stack $ lambda ;.
hold_type_by_name $ u4 ;.
push_carrier_raw_value $ 38 ;.
coalesce_channel_group ;.
evaluate_channel_group ;.
delete_temps ;.
delete_retired ;.
clear_temps ;.
reset_program_stack ;.
 .; end of statement ;.
@fne ;.

push_carrier_anon_fn @ last_source_fn_name ;.

coalesce_channel_group ;.
evaluate_channel_group ;.
delete_temps ;.
delete_retired ;.
clear_temps ;.
reset_program_stack ;.
 .; end of statement ;.

