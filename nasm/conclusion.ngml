
`section.Conclusiom`
`p.
The five variants of hypergraph representations 
I discussed in the last section all support some version 
of non-antisymmetry or whole-part-whole `q.cycles`/.  
In these various models, nodes can encapsulate internally 
structured complexes of some kind %-- ordered lists of 
nodes (as in hyperedges), nested graphs, groups 
of nodes and/or edges, or list- or table-like data structures.  
Insofar as complex aggregates are gathered into 
individual nodes, they can be referenced and/or linked 
from other contexts.  This includes other nodes 
forming an edge which also includes a complex 
node, and also components within other complex 
nodes referencing a complex node as a kind of data 
value, for instance via a unique identifier 
selecting individual nodes from across every 
graph in some information system.  
`p`

`p.
Hypergraph paradigms may or may not allow nodes 
in graphs or node-sets `q.nested` in complex nodes to 
link, via edges, to nodes on other `q.levels`/.  But 
even without such `q.explicit` links (manifest in 
actual graph dges) nodes or data values inside nodes 
can `q.point to` complex nodes via numeric codes 
or other unique identifiers.  In general it may not 
be possible to technologically represent hypergraph 
structures without allowing some sort of 
`q.indirect` referencing of nodes; such 
indirection is a prerequisite of enumerating 
sets of nodes, iterating over nods, or otherwise 
processing nodes otherwise than following 
graph-edges.  Most analysis and computational 
examination of graphs involves larger-scale 
actions on graphs that are not restricted to 
`q.localized` navigation which incorporates only 
information immediately associated with nodes and 
edges (like types and labels) or the local 
`q.topology` around individual nodes.  Creating lists of 
nodes, for example, involves structural associations 
among the nodes which lie outside the 
actual graph topology.`footnote.Topology in 
these contexts meaning network topology.`  
In effect, an option of designating 
(potentially complex, i.e., internally structured) nodes 
as their own values (or perhaps unique identifiers 
of nodes as values or data-points) is 
requisite for the computational 
expressibility of hypergraph instances.
`p`

`p.
Consequently, then, the possibility of cross-referencing 
between `q.levels` is an intrinsic feature of hypergraphs 
qua technological objects.  A particular graph 
engine may restrict cross-referencing or at least formally 
represent a distinction among different levels, but this 
will be an extra structure superimposed on the core 
system.  Intuitively, then, the `q.parts` of 
a complex node are not necessarily `q.smaller` than 
the outer nodes.  Moreover, there is no 
limitation, without external restriction, 
that a complex node cannot contain a reference to 
`i.its own` identifier (in effect, to be a 
part of itself), or that by following chains of 
parthood we cannot cycle back with a reference to a 
prior whole.  In other words, the mereology 
which organically emerges from 
hypergraph thory is intrinsically non-antisymmetric.  
`p`

`p.
If this result seems counterintuitive, such an impression 
perhaps rsults from envisioning a mereology 
which is rooted in axiomatic formulation, and from 
there applied (at least as a simplifying or 
modeling device) to cognitive or empirical phenomena.   
It may be true that axiomatic mereologies are 
less interesting without restrictions on 
symmetry or cycles; otherwise parthood itself 
loses a lot of its `i.a priori` logical 
structure and becomes only a kind of vague 
association.  The point of 
organizing mereological theory around hypergraphs, 
however, is to work against the background 
of concrete technology in lieu of 
axiomatic abstractions: hypergraph 
systems may have little in the way of 
`i.a priori` structure but they present a 
sophisticated technical structure when paired with 
concrete data; i.e., when instantiated.  
`p`

`p.
It's also plausible that hypergraphs are a more 
convenient or legitimate representation 
of both scientific and cognitive phenomena 
than classical (axiomatic) mereology.  
Hypergraphs are, I think, certainly an 
improvement over (say) Semantic Web 
non-multiscale graphs for representing scientific 
data.  I would argue that hypergraphs are 
better for representing cognitive phenomena as well, 
such as cognitive grammars and lexicons, or the 
prototypical forms of cognitive schema.
`p`

`p.
Ultimately, though, my main point is not to 
celebrate the expressive virtues of 
hypergraphs; instead I think the 
intellectual passage from mereology 
to hypergraphs can serve as a kind 
of parable.  Rather than pursuing 
abstract axiomatic treatment for foundational 
philosophical concepts %-- here I have considered  
mereology, but I can see related discussions 
for perceptual synthesis, causal/constitutive emergence, 
supervenience, essences vs. accidents, theory-revision, 
graded/rough sets, prototypes and exemplars, 
indeed conceptualization in general %-- we may 
find more cognitive and metascientific traction 
by looking at structural systems that can embody 
the relevant philosophical or metaphysical 
topics in a computational, engineering-oriented milieu.  
Metaphilosophically, 
this may be analogized as a transition from 
a logico-mathematical paradigms to someething 
more `q.structuralist`/, with structures realized 
in engineered systems taking the intuition-forming 
role otherwise associated with logical arcgetypes.
`p`

`p.
Our academic climate of open-source software and 
decentralized computational experimentation may 
provide the technological capabilities 
for a new, arguably belated `q.`i.Structuralist`/` 
phase in Analytic philosophy.  Structuliam 
in general %-- in linguistics, say, or 
sociology, anthropology, psychoanalysis, political 
economics %-- is associated with a technical but 
not logical/axiomatic theoretical architcture; a 
kind of `i.a posteriori` analyticity.  Perhaps a 
Structuralist analytic philosophy 
will prove to overlap, in interesting ways, with 
Continental philosophy and, especially, with phenomenology.
`p`

`EnglischeLinie;
`p.
More famous writers than myself, of course, 
have envisioned (or made their life's work) 
a synthesis of Analytic philosophy and 
phenomenology.  At the least I would 
need to cite Petitot, David Woodruff Smith, and 
Barry Smith, with the latter's 
intellectual and logistical work on the 
Semantic Web showing how the 
foundational thory of the Semantic Web 
serves as a kind of applied and 
operationalized phenomenology.  The 
scintists and linguists who have then 
identified limitations in and presented 
alternatives to the Semantic Web, 
like Peter G\"ardenfors, are then 
joining a dialectic that phenomenologists 
can already see figured as like an 
`q.applied phenomenology` %-- the 
implicit dialog between Conceptual Space Theory 
and `q.Semantic Web Semantics` thereby 
linking Conceptual Spaces to phenomenology 
on an engineering basis, alongside 
phenomenological possibilities of 
G\"ardenfors's theories in their philosophical 
roots.  
`p`

`p.
The circle from G\"ardenfors's to the 
(in his words) `q.mainly Californian` 
tradition embodied by Langacker and 
others, can then be extended to 
`q.a French semiotic tradition, 
exemplified by Descl\'es ... and Petitot-Cocorda ... 
which shares many features with the American 
(mainly Californian) group` 
\cite[p.2]{GardenforsTenets}.  In turn, 
Petitot's explicitly phenomenological 
foundation connects the cognitive `i.linguistic` 
perspective to the Analytic-phenomenology 
synthesis distilled for instance in 
Petitot's (et. al.) `i.Naturalizing 
Phenomenology` compilation from the year 2000.
So at last one thematic circle ties 
phenomenology (especially in the 
prohect of its engagement with Analytic 
philosophy) with Cognitive 
Linguistics, and relates both in 
combination to the Semantic Web and related 
computational and `q.knowledge engineering` 
concerns.  This circle probably 
remains outside the dominant paradigms in both 
Contiental and Analytic 
thought, but it has some internal 
coherence, and some unity of 
theoretical engagements spanning both 
philosophical and concrete (e.g., 
technological) subject-areas.
`p`

`p.
The circle between phenomenology and 
Cognitive Linguistics, and including 
computational and metascientific topics, 
deserves to be analyzed and reinforced.  The only 
detail I would add is that the forum for 
such further unification may not in the future 
only be that of textualized philosophical 
argumentation.  Perhaps this century's  
`q.Naturalizing Phenomenology` project will play 
out in software and code libraries %-- and in 
the intellectual spaces where these digital 
constructions are studied, debated, publicized, 
and refined %-- not just in the pages of books 
and journals.  
 
`p`

`p.

`p`
