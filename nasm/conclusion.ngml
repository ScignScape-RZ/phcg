
`section.Conclusiom`
`p.
The four variants of hypergraph representations 
I discussed in the last section all support some version 
of non-antisymmetry or whole-part-whole `q.cycles`/.  
In these various models, nodes can encapsulate internally 
structured complexes of some kind %-- ordered lists of 
nodes (as in hyperedges), nested graphs, groups 
of nodes and/or edges, or list- or table-like data structures.  
Insofar as complex aggregates are gathered into 
individual nodes, they can be referenced and/or linked 
from other contexts.  This includes other nodes 
forming an edge which also includes a complex 
node, and also components within other complex 
nodes referencing a complex node as a kind of data 
value, for instance via a unique identifier 
selecting individual nodes from across every 
graph in some information system.  
`p`

`p.
Hypergraph paradigms may or may not allow nodes 
in graphs or node-sets `q.nested` in complex nodes to 
link, via edges, to nodes on other `q.levels`/.  But 
even without such `q.explicit` links (manifest in 
actual graph dges) nodes or data values inside nodes 
can `q.point to` complex nodes via numeric codes 
or other unique identifiers.  In general it may not 
be possible to technologically represent hypergraph 
structures without allowing some sort of 
`q.indirect` referencing of nodes; such 
indirection is a prerequisite of enumerating 
sets of nodes, iterating over nods, or otherwise 
processing nodes otherwise than following 
graph-edges.  Most analysis and computational 
examination of graphs involves larger-scale 
actions on graphs that are not restricted to 
`q.localized` navigation which incorporates only 
information immediately associated with nodes and 
edges (like types and labels) or the local 
`q.topology` around individual nodes.  Creating lists of 
nodes, for example, involves structural associations 
among the nodes which lie outside the 
actual graph topology.`footnote.Topology in 
these contexts meaning network topology.`  
In effect, an option of designating 
(potentially complex, i.e., internally structured) nodes 
as their own values (or perhaps unique identifiers 
of nodes as values or data-points) is 
requisite for the computational 
expressibility of hypergraph instances.
`p`

`p.
Consequently, then, the possibility of cross-referencing 
between `q.levels` is an intrinsic feature of hypergraphs 
qua technological objects.  A particular graph 
engine may restrict cross-referencing or at least formally 
represent a distinction among different levels, but this 
will be an extra structure superimposed on the core 
system.  Intuitively, then, the `q.parts` of 
a complex node are not necessarily `q.smaller` than 
the outer nodes.  Moreover, there is no 
limitation, without external restriction, 
that a complex node cannot contain a reference to 
`i.its own` identifier (in effect, to be a 
part of itself), or that by following chains of 
parthood we cannot cycle back with a reference to a 
prior whole.  In other words, the mereology 
which organically emerges from 
hypergraph thory is intrinsically non-antisymmetric.  
`p`

`p.
If this result seems counterintuitive, such an impression 
perhaps rsults from envisioning a mereology 
which is rooted in axiomatic formulation, and from 
there applied (at least as a simplifying or 
modeling device) to cognitive or empirical phenomena.   
It may be true that axiomatic mereologies are 
less interesting without restrictions on 
symmetry or cycles; otherwise parthood itself 
loses a lot of its `i.a priori` logical 
structure and becomes only a kind of vague 
association.  The point of 
organizing mereological theory around hypergraphs, 
howevere, is to work against the background 
of concrete technology in lieu of 
axiomatic abstractions: hypergraph 
systems may have little in the way of 
`i.a priori` structure but they present a 
sophisticated technical structure when paired with 
concrete data; i.e., when instantiated.  
`p`

`p.
It's also plausible that hypergraphs are a more 
convenient or legitimate representation 
of both scientific and cognitive phenomena 
than classical (axiomatic) mereology.  
Hypergraphs are, I think, certainly an 
improvement over (say) Semantic Web 
non-multiscale graphs for representing scientific 
data.  I would argue that hypergraphs are 
better for representing cognitive phenomena as well, 
such as cognitive grammars and lexicons, or the 
prototypical forms of cognitive schema.
`p`

`p.
Ultimately, though, my main point is not to 
celebrate the expressive virtues of 
hypergraphs; instad I think the 
intellectual passage from mereology 
to hypergraphs can serve as a kind 
of parable.  Rather than pursuing 
abstract axiomatic treatment for foundational 
philosophical concepts %-- here I have considered  
mereology, but I can see related discussions 
for perceptual synthesis, causal/constitutive emergence, 
supervenience, essences vs. accidents, theory-revision, 
graded/rough sets, prototypes and exemplars, 
indeed conceptualization in general %-- we may 
find more cognitive and metascientific traction 
by looking at structural systems that can embody 
the relevant philosophical or metaphysical 
topics in a computational, engineering-oriented milieu.  
Metaphilosophically, 
this may be analogized as a transition from 
a logico-mathematical paradigms to someething 
more `q.structuralist`/, with structures realized 
in engineered systems taking the intuition-forming 
role otherwise associated with logical arcgetypes.
`p`

`p.
Our academic climate of open-source software and 
decentralized computational experimentation may 
provide the technological capabilities 
for a new, arguably belated `q.`i.Structuralist`/` 
phase in Analytic philosophy.  Struxtuliam 
in general %-- in linguistics, say, or 
sociology, anthropology, psychoanalysis, political 
economics %-- is associated with a technical but 
not logical/axiomatic theoretical architcture; a 
kind of `i.a posteriori` analyticity.  Perhaps a 
Structuralist analytic philosophy 
will prove to overlap, in interesting ways, with 
Continental philosophy and, specially, with phenomenology.
`p`

`p.

`p`
